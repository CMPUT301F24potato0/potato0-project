package com.example.eventlottery.Admin;

import android.app.AlertDialog;
import android.app.Dialog;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.content.ContextCompat;
import androidx.fragment.app.DialogFragment;

import com.example.eventlottery.MainActivity;
import com.example.eventlottery.Models.UserModel;
import com.example.eventlottery.R;
import com.google.firebase.firestore.Blob;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;

import java.io.ByteArrayOutputStream;
import java.util.Random;

import java.util.Objects;


public class AdminUserDetailsFragment extends DialogFragment {
    private final UserModel user;
    private final FirebaseFirestore db;
    private TextView profile_letter;
    private ImageView pfp;

    public AdminUserDetailsFragment(UserModel item) {
        user = item;
        db = FirebaseFirestore.getInstance();
    }


    @NonNull
    @Override
    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
        View rootView = LayoutInflater.from(getContext()).inflate(R.layout.admin_user_details, null);
        ((TextView)rootView.findViewById(R.id.admin_name_info)).setText(String.format("%s %s", user.getfName(), user.getlName()));
        ((TextView)rootView.findViewById(R.id.admin_email_info)).setText(String.format("%s", user.getEmail()));
        ((TextView)rootView.findViewById(R.id.admin_phone_info)).setText(String.format("%s", user.getPhone()));
        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        rootView.findViewById(R.id.admin_delete_user).setOnClickListener((View view) -> {
            if (!Objects.equals(user.getiD(), MainActivity.curUser.getiD()))
                user.delete(db);
            else
                Toast.makeText(getContext(), "Can't delete yourself", Toast.LENGTH_SHORT).show();
            dismiss();
        });
        rootView.findViewById(R.id.admin_user_cancel_button).setOnClickListener((View view) -> {
            dismiss();
        });
        Button delete_pfp = rootView.findViewById(R.id.admin_delete_pfp);

        pfp = rootView.findViewById(R.id.view_profile_pic);
        profile_letter = rootView.findViewById(R.id.profile_letter_picture);
        db.collection("photos").document(user.getiD()).get().addOnCompleteListener( task -> {
            DocumentSnapshot document = task.getResult();
            if (document.exists()){
                Blob blob = document.getBlob("Blob");
                byte[] bytes = blob.toBytes();
                Bitmap bitmap= BitmapFactory.decodeByteArray(bytes,0,bytes.length);
                pfp.setImageBitmap(bitmap);
            } else {
                defaultOrAutogenerated();
                delete_pfp.setVisibility(View.GONE);
            }
        });
        delete_pfp.setOnClickListener((view) -> {
            db.collection("photos").document(user.getiD()).delete();
            pfp.setImageBitmap(null);
            defaultOrAutogenerated();
//            pfp.setImageResource(R.drawable.defaultprofilepicture);
            delete_pfp.setVisibility(View.GONE);
        });
        builder.setView(rootView);
        return builder.create();
    }


    public void defaultOrAutogenerated(){
        String initial = "";
        if (!user.getfName().isEmpty()){
            initial = String.valueOf(user.getfName().charAt(0)).toUpperCase();
        } else if(!user.getlName().isEmpty()){
            initial = String.valueOf(user.getlName().charAt(0)).toUpperCase();
        }
        if(!initial.isEmpty()){
            autoGeneratedProfilePicture(initial);
        } else{
            pfp.setImageResource(R.drawable.defaultprofilepicture);
        }
    }
    public void autoGeneratedProfilePicture(String finalInitial){
        profile_letter.setVisibility(View.VISIBLE);
        profile_letter.setText(finalInitial);
        Bitmap bitmap = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        // Get the TextView's text and draw it onto the canvas
        Paint paint = profile_letter.getPaint();
        if (getContext() == null){
            Log.e("Context","Context was null");
            paint.setColor(Color.BLACK);
        } else{
            Log.e("Context","Context is not null");
            paint.setColor(ContextCompat.getColor(requireContext(), R.color.black));
        }
        // Citation: https://stackoverflow.com/questions/11120392/android-center-text-on-canvas
        paint.setTextAlign(Paint.Align.CENTER);
        int x_pos = (canvas.getWidth() / 2);
        int y_pos = (int) (((float) canvas.getHeight() / 2) - ((paint.descent() + paint.ascent()) / 2));
        // Add any colours for the profile background
        int[] colors = {
                R.color.gold,
        };
        int randColor = colors[new Random().nextInt(colors.length)];
        if (getContext() == null){
            Log.e("Context","Context was null");
            canvas.drawColor(Color.BLUE);
        } else{
            Log.e("Context","Context is not null");
            canvas.drawColor(ContextCompat.getColor(requireContext(), randColor));
        }
        canvas.drawText(profile_letter.getText().toString(), x_pos, y_pos, paint);

        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.JPEG,100,stream);
        pfp.setImageBitmap(bitmap);
        profile_letter.setVisibility(View.GONE);
    }
}
